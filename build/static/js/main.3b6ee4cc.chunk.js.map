{"version":3,"sources":["game-logo.png","sam-logo.png","components/Helpers/Helpers.js","config.js","components/layout/GameOverForm.js","GameOver.js","Game.js","components/layout/Header.js","MainMenu.js","components/layout/AppBackground.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","capitalize","s","charAt","toUpperCase","slice","GameOverForm","props","useState","name","setName","bekkur","setBekkur","school","setSchool","savedScore","setSavedScore","useEffect","forms","document","getElementsByClassName","Array","prototype","filter","call","form","addEventListener","event","checkValidity","preventDefault","stopPropagation","classList","add","className","noValidate","onSubmit","score","jsonBody","JSON","stringify","console","log","fetch","config","method","headers","body","then","res","ok","htmlFor","type","id","placeholder","onChange","target","value","required","GameOver","style","color","marginTop","icon","faTrophy","size","href","FacebookShareButton","url","quote","hashtag","FacebookIcon","round","Word","words","setWords","shuffledWords","setShuffledWords","rightAnswer","setRightAnswer","wrongAnswer","setWrongAnswer","setScore","answerArray","setAnswerArray","isLoading","setIsLoading","timeLeft","setTimeLeft","timeComponents","setTimeComponents","isLandscape","setIsLandscape","gameOver","setGameOver","a","axios","get","newWords","data","map","obj","forEach","el","isRight","parse","catch","err","window","innerHeight","innerWidth","intervalId","setInterval","getElementById","opacity","timer","time","divisor_for_minutes","divisor_for_seconds","m","ceil","calculateTimeLeft","temp","Object","keys","interval","push","key","clearInterval","right","wrong","isMobile","faSpinner","spin","onDragEnd","result","source","destination","sInd","droppableId","dInd","from","splice","index","cardSource","boardId","cardTarget","items","list","startIndex","endIndex","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","move","newAnswerArray","totalAnswers","resetGame","ord","i","isDropDisabled","provided","snapshot","ref","innerRef","isDraggingOver","background","padding","width","minWidth","maxWidth","minHeight","height","maxHeight","marginBottom","borderRadius","droppableProps","item","texti","draggableId","toString","draggableProps","dragHandleProps","Header","marginLeft","src","gameLogo","samLogo","MainMenu","to","class","About","marginRight","App","router","useRef","isFront","setIsFront","current","history","location","pathname","listen","DndProvider","backend","HTML5Backend","basename","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3b6ee4cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/game-logo.6cc74d3a.png\";","module.exports = __webpack_public_path__ + \"static/media/sam-logo.e0f7f8a8.png\";","export function shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\nexport function capitalize(s) {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n\n}\n\nexport const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nexport const move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nexport const calculateTimeLeft = (time) => {\n    let timeLeft = {};\n    if (time > 0) {\n        let divisor_for_minutes = time % (60 * 60);\n        let min = Math.floor(divisor_for_minutes / 60);\n\n        let divisor_for_seconds = divisor_for_minutes % 60;\n        let sec = Math.ceil(divisor_for_seconds);\n        timeLeft = {\n            m: min,\n            s: sec\n        };\n    }\n    return timeLeft;\n}","export default {\n\tapiUrl: '/spagetti_backend'\n\t//apiUrl: 'https://krakkar.arnastofnun.is/spagetti_backend'\n}\n","import React, { useState, useEffect } from 'react'\nimport config from \"./../../config\";\n\nfunction GameOverForm(props) {\n    const [name, setName] = useState('');\n    const [bekkur, setBekkur] = useState('');\n    const [school, setSchool] = useState('');\n    const [savedScore, setSavedScore] = useState(false);\n\n\n    useEffect(() => {\n        var forms = document.getElementsByClassName('needs-validation');\n        \n        // Loop over them and prevent submission\n        Array.prototype.filter.call(forms, function (form) {\n            form.addEventListener('submit', function (event) {\n                if (form.checkValidity() === false) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                form.classList.add('was-validated');\n            }, false);\n        });\n    })\n\n    function handleSubmit(event) {\n        var forms = document.getElementsByClassName('needs-validation');\n        \n        const form = {\n            name: name,\n            school: school,\n            className: bekkur,\n            score: props.score\n        };\n        const jsonBody = JSON.stringify(form);\n        console.log(form)\n        Array.prototype.filter.call(forms, function (form) {\n            form.classList.add('was-validated');\n\n        });\n        if(!!name || !!bekkur || !!school ){\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: jsonBody\n            };\n            fetch(config.apiUrl+'/HighScore/', requestOptions)\n                .then(res => {\n                    console.log(res)\n                    if(res.ok){\n                        setSavedScore(true);\n                    }\n                });\n        }\n        \n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    return (\n        <div>\n            {savedScore ? \n            <div className=\"gameoverContainer\">\n                <h2>Stig vistuð!</h2>\n            </div>\n                :\n            <form className=\"needs-validation\" noValidate onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"nameInput\">Nafn</label>\n                    <input type=\"text\" className=\"form-control\" id=\"nameInput\" placeholder=\"\" onChange={event => setName(event.target.value)} required></input>\n                    <div className=\"invalid-feedback\">\n                        Vinsamlegast sláðu inn nafn.\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"classInput\">Bekkur</label>\n                    <input type=\"text\" className=\"form-control\" id=\"classInput\" placeholder=\"\" onChange={event => setBekkur(event.target.value)} required></input>\n                    <div className=\"invalid-feedback\">\n                        Vinsamlegast sláðu inn bekk.\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"my-1 mr-2\" htmlFor=\"schoolInput\">Skóli</label>\n                    <input type=\"text\" className=\"form-control\" id=\"schoolInput\" placeholder=\"\" onChange={event => setSchool(event.target.value)} required></input>\n                    \n                    {/*<select className=\"custom-select my-1 mr-sm-2\" id=\"inlineFormCustomSelectPref\" required>\n                        <option value=\"\"> - </option>\n                        <option value=\"1\">One</option>\n                        <option value=\"2\">Two</option>\n                        <option value=\"3\">Three</option>\n                    </select>*/}\n                    <div className=\"invalid-feedback\">\n                        Vinsamlegast sláðu inn skóla.\n                 </div>\n                </div>\n                <button className=\"btn btn-success btn-lg mt-1\" type=\"submit\">Vista stig</button>\n            </form>\n            }\n        </div>\n    )\n}\n\nexport default GameOverForm\n","import React, { useEffect } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrophy } from \"@fortawesome/free-solid-svg-icons\";\nimport { FacebookShareButton, FacebookIcon } from \"react-share\";\nimport GameOverForm from './components/layout/GameOverForm';\n\nexport default function GameOver(props) {\n\n    /*useEffect(() => {\n        const test = document.getElementsByClassName(\"App\");\n        test[0].classList.add(\"backgroundWinner\");\n    })*/\n    return (\n        <div className=\"container centerGameOver\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"gameoverContainer\">\n                        <h1>Tími búinn!</h1>\n                        {/*<h2>Þú náðir {props.right} af {props.wrong + props.right} orðskýringum réttum </h2>*/}\n                        <h2>Þú fékkst {props.score} stig</h2>\n                        <h3 style={{color: \"#d4af37\", marginTop: \"30px\"}} ><FontAwesomeIcon icon={faTrophy}  size={\"4x\"} /></h3>\n                    </div>\n                    {process.env.REACT_APP_IS_COMPITION == 'true' ?\n                    <div>\n                        <GameOverForm score={props.score} />\n                    </div>\n                    :\n                    <div></div>\n                    }\n                    \n                    <div className=\"gameoverContainer\">\n                        <a href=\"/game\" className=\"btn buttonGreen btn-lg\">Spila aftur?</a>\n                    </div>\n                    <div className=\"gameoverContainer shareContainer\">\n                        <FacebookShareButton\n                            url=\"https://krakkar.arnastofnun.is/spagetti/\"\n                            quote={\"Ég fékk \" + props.score + \" stig!\" }\n                            hashtag=\"#árnastofnun\"\n                            >\n                            <FacebookIcon round={false} size={\"48px\"}/>\n                        </FacebookShareButton>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { shuffle, capitalize, calculateTimeLeft } from \"./components/Helpers/Helpers\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { reorder, move } from '../src/components/Helpers/Helpers';\nimport { isMobile } from 'react-device-detect';\nimport MenuIcon from \"./components/layout/MenuIcon\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStopwatch } from \"@fortawesome/free-solid-svg-icons\";\nimport GameOver from \"./GameOver\";\nimport config from \"./config\";\n\nexport default function Word(props) {\n  const [words, setWords] = useState([]);\n  const [shuffledWords, setShuffledWords] = useState([]);\n  const [rightAnswer, setRightAnswer] = useState(0);\n  const [wrongAnswer, setWrongAnswer] = useState(0);\n  const [score, setScore] = useState(0);\n  const [answerArray, setAnswerArray] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(180);\n  const [timeComponents, setTimeComponents] = useState([[]]);\n  const [isLandscape, setIsLandscape] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n\n  function onDragEnd(result) {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n\n    const sourceClone = Array.from(words[sInd]);\n    const [cardSource] = sourceClone.splice(source.index, 1);\n    const boardId = destination.droppableId - 1;\n    const cardTarget = shuffledWords[boardId];\n\n    if (sInd === dInd) {\n      const items = reorder(words[sInd], source.index, destination.index);\n      const newWords = [...words];\n      newWords[sInd] = items;\n      setWords(newWords);\n    } else {\n      if (cardSource.id === cardTarget.id) { //Rétt svar\n        cardSource.isRight = true;\n        const newRightAnswer = rightAnswer + 1\n        setRightAnswer(newRightAnswer);\n        const newScore = score + 100;\n        setScore(newScore);\n        const result = move(words[sInd], words[dInd], source, destination);\n        const newWords = [...words];\n        newWords[sInd] = result[sInd];\n        newWords[dInd] = result[dInd];\n        setWords(newWords);\n      } else { // Rangt svar\n        const newWrongAnswer = wrongAnswer + 1\n        setWrongAnswer(newWrongAnswer);\n        if(score > 0) {\n          const newScore = score - 50;\n          setScore(newScore);\n        }\n        let newAnswerArray = [...answerArray];\n        const index = dInd - 1;\n        newAnswerArray[index] = true;\n        cardTarget.isRight = false;\n        setAnswerArray(newAnswerArray);\n\n      }\n      const totalAnswers = wrongAnswer + rightAnswer + 1;\n      if (totalAnswers % 5 === 0 && totalAnswers >= 5) {\n        resetGame();\n      }\n    }\n  }\n\n  const getListStyle = (isDraggingOver, i, isMobile) => (\n    {\n      background: isDraggingOver ? \"#379571\" : null,\n      padding: isMobile ? 5 : 15,\n      width: \"100%\",\n      minWidth: isMobile ? 250 : 300,\n      maxWidth: isDraggingOver && isMobile ? 250 : isMobile ? 250 : 300,\n      minHeight: isMobile ? 100 : 120,\n      height: isMobile ? 100 : 120,\n      maxHeight: isMobile ? 100 : 120,\n      marginBottom: isMobile ? 10 : 20,\n      borderRadius: 3,\n    });\n\n  async function resetGame() {\n    axios\n      .get(config.apiUrl+\"/words/5\")\n      .then((res) => {\n        let newWords = res.data.map((obj) => obj);\n        newWords.forEach(el => {\n          el.isRight = null;\n        });\n\n        setWords([newWords, [], [], [], [], []]);\n\n        const shuffledWords = JSON.parse(JSON.stringify(newWords));\n\n        setShuffledWords(shuffle(shuffledWords));\n        setAnswerArray([false, false, false, false, false]);\n      })\n      .catch((err) => console.log(err))\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios\n      .get(config.apiUrl+\"/words/5\")\n      .then((res) => {\n        let newWords = res.data.map((obj) => obj);\n        newWords.forEach(el => {\n          el.isRight = null;\n        });\n\n        setWords([newWords, [], [], [], [], []]);\n\n        const shuffledWords = JSON.parse(JSON.stringify(newWords));\n\n        setShuffledWords(shuffle(shuffledWords));\n        setAnswerArray([false, false, false, false, false])\n        setIsLoading(false);\n\n        if (window.innerHeight < window.innerWidth) {\n          setIsLandscape(true);\n        }\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  /**\n   * Timer\n   */\n  useEffect(() => {\n\n    if(isLoading){\n      return;\n    }\n\n    if (timeLeft < 0){\n      setGameOver(true); // Fara yfir á GAME OVER síðuna.\n      setTimeComponents([]);\n      return;\n    }\n    const intervalId = setInterval(() => {\n      setTimeLeft(timeLeft - 1);\n\n\t  document.getElementById('timeBackground').style.opacity = timeLeft/180;\n      const timer = calculateTimeLeft(timeLeft);\n      const temp = [];\n      Object.keys(timer).forEach((interval) => {\n        temp.push(\n          <span key={interval}>\n            {!timer[interval] ?  \"00\" : !interval === 's' ? timer[interval] : timer[interval] < 10 ? \"0\" + timer[interval] : timer[interval]} {interval === 'm' ? \" : \" : \"\"}\n          </span>\n        );\n      });\n      setTimeComponents(temp);\n    }, 1000);\n\n    /**/\n    // clear interval on re-render to avoid memory leaks\n    return () => clearInterval(intervalId);\n\n  }, [timeLeft]);\n\n  window.addEventListener('resize', function () {\n    if (window.innerHeight < window.innerWidth) {\n      setIsLandscape(true);\n    } else {\n      setIsLandscape(false);\n    }\n  }, false);\n\n  return (\n    <div className=\"main-content\">\n      {\n        gameOver ? <GameOver score={score} right={rightAnswer} wrong={wrongAnswer}/> :\n        !isLandscape && isMobile ?\n          <div>\n            {/*<MenuIcon /> */}\n            <div className=\"container mx-auto mt-5\"><h3>Vinsamlegast snúðu símanum á hlið.</h3></div>\n          </div> :\n          <div className=\"container\">\n            {/*{isMobile ? <MenuIcon /> :\n              null} */}\n            <div className=\"flexbox\">\n              <div className=\"scoreBoard\" id=\"scoreBoardId\">\n                <div className=\"row \">\n                  <div className=\"col\">\n                    <h3>\n                      <strong>Rétt svör</strong> {rightAnswer}\n                    </h3>\n                  </div>\n                  <div className=\"col\">\n                    <h3>\n                      <strong>Röng svör</strong> {wrongAnswer}\n                    </h3>\n                  </div>\n                  <div className=\"col\">\n                    <h3>\n                      {/*<FontAwesomeIcon icon={faStopwatch} />*/} <strong>Tími</strong> {timeComponents.length ? timeComponents : \"búinn!\"}\n                    </h3>\n                  </div>\n                </div>\n              </div>\n              <div className=\"titleBoard\">\n                <div className=\"row \">\n                  <div className=\"col\">\n                    <h3>Orð</h3>\n                  </div>\n                  <div className=\"col\">\n                    <h3>Skýringar</h3>\n                  </div>\n                </div>\n              </div>\n              <div className=\"row gameBoard\">\n                {isLoading ? <div className=\"loadingDiv\">Sæki orðin <FontAwesomeIcon icon={faSpinner} spin /></div> : null}\n\n                <DragDropContext onDragEnd={onDragEnd}>\n                  <div className=\"col questions\">\n                    {words.map((ord, i) => (\n                      i !== 0 ?\n\n                        <Droppable key={i} droppableId={`${i}`} isDropDisabled={ord.length === 1 ? true : answerArray[i - 1] ? true : false}>\n                          {(provided, snapshot) => (\n\n                            <div\n                              ref={provided.innerRef}\n                              style={getListStyle(snapshot.isDraggingOver, i-1, isMobile)}\n                              {...provided.droppableProps}\n                              className={answerArray[provided.droppableProps[\"data-rbd-droppable-id\"] - 1] ? \"wrong\" : \"board\"}\n                            >\n                              <div style={{ marginTop: -5 }}>\n                                {provided.droppableProps[\"data-rbd-droppable-id\"]}. {shuffledWords[i-1] ? shuffledWords[i-1].ord : ''}\n                              </div>\n                              {ord.map((item, i) => (\n                                <div\n                                  id={item.id}\n                                  key={item.id}\n                                  className={'card'+(item.isRight ? ' right' : '')}\n                                  style={{ minHeight: item.isRight ? \"65px\" : \"\" , maxHeight: item.isRight ? \"65px\" : \"\" }}\n                                >\n                                  <p>{capitalize(item.texti)}</p>\n                                </div>\n                              ))}\n\n                              {provided.placeholder}\n                            </div>\n\n                          )}\n                        </Droppable>\n                        : null\n                    ))}\n                  </div>\n                  <div className=\"col skyringar\">\n\n                    {words.map((ord, i) => (\n                      i === 0 ?\n\n                        <Droppable key={i} droppableId={`${i}`}>\n                          {(provided, snapshot) => (\n                            <div\n                              ref={provided.innerRef}\n                              //style={getListStyle(snapshot.isDraggingOver)}\n                              {...provided.droppableProps}\n                            >\n                              {ord.map((item, i) => (\n                                <Draggable\n                                  key={item.id}\n                                  draggableId={item.id.toString()}\n                                  index={i}\n                                >\n                                  {(provided, snapshot) => (\n                                    <div\n                                      ref={provided.innerRef}\n                                      {...provided.draggableProps}\n                                      {...provided.dragHandleProps}\n                                    >\n                                      <div id=\"board-0\" className=\"board\">\n\n                                        <div\n                                          id={item.id}\n                                          key={item.id}\n                                          className=\"card\"\n                                        >\n                                          <p>{capitalize(item.texti)}</p>\n                                        </div>\n                                      </div>\n\n                                    </div>\n                                  )}\n\n                                </Draggable>\n                              ))}\n                              {provided.placeholder}\n                            </div>\n\n                          )}\n                        </Droppable>\n                        : null\n                    ))}\n                  </div>\n\n                </DragDropContext>\n\n              </div>\n            </div>\n          </div>\n      }\n    </div>\n  );\n}\n","import React from 'react'\n\nimport gameLogo from '../../game-logo.png';\nimport samLogo from '../../sam-logo.png';\n\nexport default function Header(props) {\n\treturn <div className=\"header\">\n\t\t<div className=\"w-100 text-center\" style={{marginLeft: \"10px\"}}>\n\t\t\t<img className=\"game-logo\" src={gameLogo} />\n\t\t\t<br/>\n\t\t\t<a href=\"http://arnastofnun.is\"><img className=\"sam-logo\" src={samLogo} /></a>\n\t\t</div>\n\t</div>;\n}\n\nfunction _Header(props) {\n\n\n    /* Close/hide the sidenav */\n    function closeNav() {\n        document.getElementById(\"mySidenav\").style.width = \"0\";\n        if (document.getElementById(\"scoreBoardId\") !== null) {\n            document.getElementById(\"scoreBoardId\").style.display = \"block\";\n        }\n    }\n\n    return (\n        <div>\n            {\n                props.isMobile ?\n                    <div id=\"mySidenav\" className=\"sidenav\">\n                        <a className=\"closebtn\" onClick={closeNav}>&times;</a>\n                        <a href=\"/\">Forsíða</a>\n                        <a href=\"/about\">Um leikinn</a>\n                    </div>\n                    :\n                    <nav className=\"navbar navbar-light\" style={{ backgroundColor: \"#3CA5C5\" }}>\n                        <a className=\"navbar-brand\" href=\"/\" style={{ color: \"white\" }}>\n                            <img src=\"https://www.arnastofnun.is/themes/custom/xi_arnastofnun/public/images/logo-white.png\" width=\"40\" height=\"30\" className=\"d-inline-block align-top mr-1\" alt=\"\" />\n                            Leikur Árnastofnun\n                        </a>\n                    </nav>\n            }\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { isMobile } from 'react-device-detect';\n\nexport default function MainMenu() {\n\n    return (\n\t\t<div className=\"d-flex h-100 justify-content-center align-items-center\">\n\t\t\t<div>\n\t            <div className=\"menuItem\">\n\t                <Link to=\"/game\" class=\"btn btn-info btn-lg\">Spila</Link>\n\t            </div>\n\t            <div className=\"menuItem\">\n\t                <Link to=\"/about\" class=\"btn btn-info btn-lg\">Um leikinn</Link>\n\t            </div>\n\t\t\t</div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Header(props) {\n\treturn <div>\n\t\t<div className=\"app-background red-blue\" />\n\t\t<div className=\"app-background\" id=\"timeBackground\" style={{opacity: 1}} />\n\t</div>;\n}\n","import React, { useEffect } from 'react'\nimport { isMobile } from 'react-device-detect';\nimport MenuIcon from './components/layout/MenuIcon';\n\nexport default function About() {\n\n\n    return (\n        <div className=\"container\">\n            {/*{isMobile ? <MenuIcon /> :\n                null} */}\n            <div className=\"flexbox\">\n                <div className=\"row\">\n                    <div className=\"col\" style={{ marginTop: isMobile ? 30 : 100, marginLeft: isMobile ? 0 : 100, marginRight: isMobile ? 0 : 100}}>\n                        <div>\n                            <h3>Markmið leiksins</h3>\n                            <p>Svaraðu eins mörgum orðskýringum og þú getur þangað til tíminn rennur út með því að draga\n                            orðskýringu í dálk sem samsvarar réttu orði.\n                        </p>\n                        </div>\n\t\t\t\t\t\t<div >\n                            <h3>Hvernig á að spila</h3>\n                            <p>Vinstra megin á síðunni birtist dálkur með orðum og hægra megin dálkur með orðskýringum.\n                            Dragðu orðskýringu yfir á orðið sem skýringin á við til þess að vinna inn stig. Ef dregið er að vitlausu orði er ekki hægt\n                            að giska á skýringu á því orði aftur. Fimm orð og orðskýringar birtast í senn. Haldið er utan um rétt og röng svör og má sjá fjölda þeirra\n                            fyrir ofan dálkana. Þegar giskað hefur verið á öll fimm orðin birtast fimm ný orð þangað til tíminn rennur út.\n                        </p>\n                        </div>\n\t\t\t\t\t\t<div >\n                            <h3>Um leikinn</h3>\n                            <p><strong>Spagettí</strong> er leikur sem Vinir Árnastofnunar létu útbúa fyrir styrk frá Málræktarsjóði. Í leiknum eru notuð orð sem finnast í Ritmálssafni Orðabókar Háskólans og Íslenskri nútímamálsorðabók. Leikurinn var forritaður af Andreu Ósk Sigurðardóttur.</p>\n                        </div>\n                        <div className=\"homeButton\">\n                            <a href=\"/\" class=\"btn buttonGreen btn-lg\">Aftur á forsíðu</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Word from './Game';\nimport Header from './components/layout/Header';\nimport MainMenu from './MainMenu';\nimport AppBackground from './components/layout/AppBackground';\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport About from './About';\nimport { isMobile } from 'react-device-detect';\n\n\nfunction App() {\n\tconst router = useRef(null);\n\tconst [isFront, setIsFront] = useState(true);\n\n\tuseEffect(() => {\n\t\tsetIsFront(router.current.history.location.pathname == '/')\n\n\t\trouter.current.history.listen((event) => {\n\t\t\tsetIsFront(event.pathname == '/');\n\t\t});\n\t});\n\n\treturn (\n\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t<Router ref={router} basename=\"/spagetti/\">\n\t\t\t\t<div className={'App h-100'+(isFront ? ' front' : '')}>\n\n\t\t\t\t\t<AppBackground />\n\n\t\t\t\t\t{/*<Header isMobile={isMobile} />*/}\n\t\t\t\t\t<div className=\"mx-auto h-100\">\n\t\t\t\t\t\t<div className=\"row d-flex h-100\">\n\t\t\t\t\t\t\t<div className={'col-12 h-sm-100'+(isFront ? ' col-md-6' : isMobile ? ' col-md-2' :  ' col-md-2' )}>\n\t\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={'col-12'+(isFront ? ' col-md-6 h-sm-100' : isMobile ? ' col-md-10' :  ' col-md-10')}>\n\t\t\t\t\t\t\t\t<Route path=\"/game\" exact component={() => <Word />} />\n\t\t\t\t\t\t\t\t<Route path=\"/\" exact component={MainMenu} />\n\t\t\t\t\t\t\t\t<Route path=\"/about\" exact component={About} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</DndProvider>\n\t);\n}\n\n//App = withOrientationChange(App);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './menu.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}